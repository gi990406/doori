# Generated by Django 4.2.23 on 2025-07-16 05:47

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Terms_and_condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_terms_and_conditions', models.TextField(verbose_name='회원가입 약관')),
                ('privacy_policy', models.TextField(verbose_name='개인정보 취급방침')),
            ],
            options={
                'verbose_name': '회원 약관',
                'verbose_name_plural': '회원 약관 관리',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.CharField(max_length=17, unique=True, verbose_name='아이디')),
                ('password', models.CharField(max_length=300, validators=[django.core.validators.RegexValidator(message='비밀번호는 영문, 숫자, 특수문자의 조합이어야 하고 8자리에서 16자리 사이여야 합니다.', regex='^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?":{}|<>]).{8,16}$')], verbose_name='비밀번호')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='이름')),
                ('hp', models.CharField(max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$')], verbose_name='핸드폰번호')),
                ('email', models.EmailField(max_length=128, verbose_name='이메일')),
                ('date_joined', models.DateField(default=django.utils.timezone.now, verbose_name='가입일')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False, verbose_name='관리자')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '회원',
                'verbose_name_plural': '회원',
                'db_table': '회원',
            },
        ),
    ]
